@model Aeriksa.Models.loginModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>

    <script src="http://maps.googleapis.com/maps/api/js?sensor=false"></script>

    <script type="text/javascript">

        // The latitude and longitude of your business / place
        var position = [28.63050, 77.13077];

        function showGoogleMaps() {

            var latLng = new google.maps.LatLng(position[0], position[1]);

            var mapOptions = {
                zoom: 16, // initialize zoom level - the max value is 21
                streetViewControl: false, // hide the yellow Street View pegman
                scaleControl: true, // allow users to zoom the Google Map
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                center: latLng
            };

            map = new google.maps.Map(document.getElementById('googlemaps'),
            mapOptions);

            // Show the default red marker at the location
            marker = new google.maps.Marker({
                position: latLng,
                map: map,
                draggable: false,
                animation: google.maps.Animation.DROP
            });
        }
        google.maps.event.addDomListener(window, 'load', showGoogleMaps);
    </script>



    <meta name="viewport" content="width=device-width" />
    <title>LogIn</title>
    <script src='https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js'></script>
    <script src='https://cdn.firebase.com/js/client/2.2.1/firebase.js'></script>
    <link href="~/css/custom.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />



</head>
<body>







    <div id="googlemaps"></div>

    <div id="contactform" class="col-xs-12">
        <div class="wrapper">


            @*<form class="">
                    <div class="form-signin-heading" style="margin-left:40%">
                        <img src="~/Image/userlogo.png" />
                    </div>
                    <input type="text" class="login-input " name="username" placeholder="Email Address" required="" autofocus="" /><br />
                    <input type="password" class="login-input " name="password" placeholder="Password" required="" />
                    <div style="width:70%;margin:auto"> @Html.ActionLink("Sign In", "DashBoard", "Home", new { @class = "btn btn-lg  btn-block btncolor" });</div>
                    <hr style="color:white" />

                    <button style="width: 70%; margin: auto" class="btn btn-lg btn-primary btn-block btncolor" type="submit">Sign Up</button>
                </form>*@



            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <div class="form-signin-heading" style="margin-left:40%">
                        <img src="~/Image/userlogo.png" />
                    </div>

                    @Html.ValidationSummary(true)


                    <div class="form-group">

                        <div class="col-md-offset-2 col-xs-8">
                            <input type='text' class="form-control" id='UseridInput' placeholder='Username'>
                            @*@Html.TextBoxFor(model => model.userid, new { @class = "form-control brdradious", @placeholder = "Username" })
                                @Html.ValidationMessageFor(model => model.userid, "", new { @class = "text-danger" })*@
                        </div>

                    </div>

                    <div class="form-group">

                        <div class="col-md-offset-2 col-xs-8">
                            <input type='password' class="form-control" id='PasswordInput' placeholder='password' style=" margin-bottom:0px">
                            @*@Html.PasswordFor(model => model.password, new { @class = "form-control brdradious", @placeholder = "Password" })

                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })*@
                            <label for="a" id="lblError" style="font-weight: 500;margin-left:50px; font-size: 14px; color: red;"></label>
                        </div>
                    </div>

                    <div class="">

                      <br />

                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-8">
                            <input type="button" value="Log In" class="btn btn-lg  btn-block btncolor" id="btnSend" />

                            <hr style="color: white; border-top: 2px solid #eee;" />
                        </div>

                    </div>


                </div>
            }


        </div>
    </div>



    <script type="text/javascript">
        $(document).ready(function () {



            // function authDataCallback(authData) {
            //     if (authData) {
            //         console.log("User " + authData.uid + " is logged in with " + authData.provider);
            //     } else {
            //         console.log("User is logged out");
            //     }
            // }




            //// var ref = Firebase("https://ariska.firebaseio.com/Feeds");


            // // var myDataRef = new Firebase('https://ariska.firebaseio.com/Airquality');
            // var myDataRef = new Firebase('https://ariska.firebaseio.com/');
            // myDataRef.onAuth(authDataCallback);

            var ref = new Firebase("https://ariska.firebaseio.com/");
            //ref.createUser({
            //    email: "admin@motifworks.com",
            //    password: "motifworks"
            //}, function (error, userData) {
            //    if (error) {
            //        console.log("Error creating user:", error);
            //    } else {
            //        console.log("Successfully created user account with uid:", userData.uid);
            //    }
            //});

            //var ref = new Firebase("https://ariska.firebaseio.com/");
            //ref.authWithPassword({
            //    email: "admin@motifworks.com",
            //    password: "motifworks"
            //}, function (error, authData) {
            //    if (error) {
            //        console.log("Login Failed!", error);
            //    } else {
            //        console.log("Authenticated successfully with payload:", authData);
            //    }
            //});


            var ref = new Firebase("https://incandescent-fire-5051.firebaseio.com");
           // var url = window.location.origin;
            function SendMessage() {
                var userid = $('#UseridInput').val();
                var password = $('#PasswordInput').val();
                var url = window.location.origin;
                ref.authWithPassword({
                    email: userid,
                    password: password
                }, function (error, authData) {
                    if (error) {
                        $('#lblError').text('Invalid Userid/Passowrd');
                        console.log("Login Failed!", error);
                    } else {

                        window.location = url + '/' +'Home/'+ 'DashBoard';
                        console.log("Authenticated successfully with payload:", authData);
                    }
                });
            }



            function ForgotPassword() {
             
                ref.resetPassword({
                    email: $('#UseridInput').val(),
                }, function (error) {
                    if (error) {
                        switch (error.code) {
                            case "INVALID_USER":
                                $('#lblError').text('Please enter a valid Username.');
                                console.log("The specified user account does not exist.");
                                break;
                            default:
                                console.log("Error resetting password:", error);
                        }
                    } else {
                        $('#lblError').text('Password reset email sent successfully!');
                        console.log("Password reset email sent successfully!");
                    }
                });
            }


            function CreateUser() {
                var url = window.location.origin;
                ref.createUser({
                    email: $('#UseridInput').val(),
                    password: $('#PasswordInput').val()

                }, function (error, userData) {
                    if (error) {
                        switch (error.code) {
                            case "EMAIL_TAKEN":
                                $('#lblError').text('The email is already in use.');
                                console.log("The new user account cannot be created because the email is already in use.");
                                break;
                            case "INVALID_EMAIL":
                                $('#lblError').text('Please enter a valid Email.');
                                console.log("The specified email is not a valid email.");
                                break;
                            default:
                                $('#lblError').text('Error creating user.');
                                console.log("Error creating user:", error);
                        }
                    } else {
                        window.location = url + '/' + 'Home/' + 'DashBoard';
                        console.log("Successfully created user account with uid:", userData.uid);
                    }
                });

            }


            $("#btnSend").click(function () {
               //  SendMessage();
                 CreateUser();
               //  ForgotPassword();
            });

        });
    </script>



</body>


</html>
