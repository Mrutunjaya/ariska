@model IEnumerable<Aeriksa.Models.DateTimeXAxisChartData>
@using JQChart.Web.Mvc

<!DOCTYPE html>
<html>
<head runat="server">
    <title></title>
    <link rel="stylesheet" type="text/css" href="~/Content/jquery.jqChart.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/jquery.jqRangeSlider.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/themes/le-frog/jquery-ui-1.8.20.css" />
    <script src="@Url.Content("~/Scripts/jquery-1.11.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.mousewheel.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.jqChart.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.jqRangeSlider.min.js")" type="text/javascript"></script>
    <!--[if IE]><script lang="javascript" type="text/javascript" src="@Url.Content("~/Scripts/excanvas.js")"></script><![endif]-->
</head>
<body>
    <div>
        @(Html.JQChart()
                .Chart(Model)
                .ID("jqChart")
                .Width(500)
                .Height(300)
                .Title("Line Chart")
                .Animation(TimeSpan.FromSeconds(1))
                .Tooltips(el => el.TooltipsType(TooltipsType.Shared))
                .Axes(axis =>
                        {
                            axis.DateTimeAxis(Location.Bottom).Labels(el => el.StringFormat("m/d/yy"));
                        }
                )
                .Series(series =>
                    {
                        series.Line()
                              .Title("Series 1")
                              .StrokeStyle("#418CF0")
                              .LineWidth(2)
                              .XValues(el => el.ValueX)
                              .YValues(el => el.ValueY1);

                        series.Line()
                              .Title("Series 2")
                              .StrokeStyle("#FCB441")
                              .LineWidth(2)
                              .XValues(el => el.ValueX)
                              .YValues(el => el.ValueY2);
                    }
                )
                .Render()
        )
    </div>
</body>
</html>